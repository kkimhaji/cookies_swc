{"ast":null,"code":"var _jsxFileName = \"/home/stanaly/project/newproject/blog-frontend/src/components/posts/PostList.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\nconst PostItem = ({\n  post\n}) => {\n  const {\n    publishedDate,\n    user,\n    tags,\n    title,\n    body,\n    _id\n  } = post;\n  return /*#__PURE__*/React.createElement(PostItemBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/@${user.username}/${_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, title)), /*#__PURE__*/React.createElement(SubInfo, {\n    username: user.username,\n    publishedDate: new Date(publishedDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tags, {\n    tags: tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, body));\n};\n\nconst PostList = ({\n  posts,\n  loading,\n  error,\n  showWriteButton\n}) => {\n  // 에러 발생 시\n  if (error) {\n    return /*#__PURE__*/React.createElement(PostListBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");\n  }\n\n  return /*#__PURE__*/React.createElement(PostListBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WritePostButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, showWriteButton && /*#__PURE__*/React.createElement(Button, {\n    cyan: true,\n    to: \"/write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"\\uC0C8 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\")), !loading && posts && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default PostList;","map":{"version":3,"sources":["/home/stanaly/project/newproject/blog-frontend/src/components/posts/PostList.js"],"names":["React","styled","Responsive","Button","palette","SubInfo","Tags","Link","PostListBlock","WritePostButtonWrapper","div","PostItemBlock","gray","PostItem","post","publishedDate","user","tags","title","body","_id","username","Date","PostList","posts","loading","error","showWriteButton","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,aAAa,GAAGP,MAAM,CAACC,UAAD,CAAa;;CAAzC;AAIA,MAAMO,sBAAsB,GAAGR,MAAM,CAACS,GAAI;;;;CAA1C;AAMA,MAAMC,aAAa,GAAGV,MAAM,CAACS,GAAI;;;;;;;;4BAQLN,OAAO,CAACQ,IAAR,CAAa,CAAb,CAAgB;;;;;;;;eAQ7BR,OAAO,CAACQ,IAAR,CAAa,CAAb,CAAgB;;;;;;CAhB/B;;AAwBA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,IAApC;AAA0CC,IAAAA;AAA1C,MAAkDN,IAAxD;AACA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,KAAIE,IAAI,CAACK,QAAS,IAAGD,GAAI,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,KAAxC,CADF,CADF,eAIE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEF,IAAI,CAACK,QADjB;AAEE,IAAA,aAAa,EAAE,IAAIC,IAAJ,CAASP,aAAT,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,IAAJ,CATF,CADF;AAaD,CAfD;;AAiBA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAgD;AAC/D;AACA,MAAID,KAAJ,EAAW;AACT,wBAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAP;AACD;;AAED,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,eAAe,iBACd,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,EAAE,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,CADF,EASG,CAACF,OAAD,IAAYD,KAAZ,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACI,GAAN,CAAUd,IAAI,iBACb,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACM,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAVJ,CADF;AAmBD,CAzBD;;AA2BA,eAAeG,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\n\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\n\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\nconst PostItem = ({ post }) => {\n  const { publishedDate, user, tags, title, body, _id } = post;\n  return (\n    <PostItemBlock>\n      <h2>\n        <Link to={`/@${user.username}/${_id}`}>{title}</Link>\n      </h2>\n      <SubInfo\n        username={user.username}\n        publishedDate={new Date(publishedDate)}\n      />\n      <Tags tags={tags} />\n      <p>{body}</p>\n    </PostItemBlock>\n  );\n};\n\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\n  // 에러 발생 시\n  if (error) {\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\n  }\n\n  return (\n    <PostListBlock>\n      <WritePostButtonWrapper>\n        {showWriteButton && (\n          <Button cyan to=\"/write\">\n            새 글 작성하기\n          </Button>\n        )}\n      </WritePostButtonWrapper>\n      {/*  로딩 중 아니고, 포스트 배열이 존재할 때만 보여줌 */}\n      {!loading && posts && (\n        <div>\n          {posts.map(post => (\n            <PostItem post={post} key={post._id} />\n          ))}\n        </div>\n      )}\n    </PostListBlock>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}